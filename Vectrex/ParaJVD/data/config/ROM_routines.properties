#--------------------------------------------------------------------------------
# This file contains the definition of all the BIOS routines.
#--------------------------------------------------------------------------------
# The addresses in this file are targeted at the BIOS images bundled with this
# ParaJVD packaging (/data/system/bios_xxx.bin).
#--------------------------------------------------------------------------------
# Each routine in this file contains one mandatory line, and optional lines:
#
# > Mandatory : "NAME=START-STOP" , where
#   + NAME  is the BIOS routine name
#   + START is the address (4 hexadecimal digits) of the block's first byte
#   + STOP  is the address (4 hexadecimal digits) of the block's last byte
#
# > Optional : "NAME.entry=ADDRESS" to define the routine's entry address (only
#    needed if it is different from the START value of the matching mandatory line)
#
# > Optional : "NAME.calls=ROUTINE1,...,ROUTINEn" where each routine is the name
#    of a BIOS routine called by this routine.
#
# Additionally, one can create families of routines that share the same goal by
# adding group lines : "group(FAMILY-NAME)=ID1,...,IDn" where each ID can either
# be a routine name, or a group name (if starting with the '@' character).
#--------------------------------------------------------------------------------

group(Dots)     = @Dot, @Dot_List
group(Joystick) = @Joy, @Read_Btns 
group(Print)    = @Print_Str, @Print_List, @Print_Ships
group(Sound)    = Clear_Sound, @Do_Sound, @Sound_Byte, @Sound_Bytes

BOOT = f000-f06b
BOOT.calls = Clear_Score, Do_Sound, DP_to_C8, Draw_Pat_VL_a, Init_Music_chk, Init_OS, Intensity_7F, Move_ix_FF, Print_List_hw, RESET, Wait_Recal

RESET = f06c-f0e8
RESET.calls = Do_Sound, DP_to_C8, Init_Music_chk, Print_Str_d, Wait_Recal

Init_VIA = f14c-f163
Init_VIA.calls = DP_to_D0, Reset0Ref, Set_Refresh

Init_OS_RAM = f164-f18a
Init_OS_RAM.calls = Clear_x_b, DP_to_C8

Init_OS = f18b-f191
Init_OS.calls = Clear_Sound, Init_OS_RAM, Init_VIA

Wait_Recal = f192-f1a1
Wait_Recal.calls = DP_to_D0, Set_Refresh

Set_Refresh = f1a2-f1a9
Set_Refresh.calls = Recalibrate

DP_to_D0 = f1aa-f1ae
DP_to_C8 = f1af-f1b3

group(Read_Btns) = Read_Btns, Read_Btns_Mask
Read_Btns_Mask = f1b4-f1b9
Read_Btns_Mask.calls = Read_Btns
Read_Btns = f1ba-f1f4

group(Joy) = Joy_Analog, Joy_Digital
Joy_Analog = f1f5-f1f7
Joy_Analog.calls = Joy_Digital
Joy_Digital = f1f8-f255

group(Sound_Byte) = Sound_Byte, Sound_Byte_x
Sound_Byte = f256-f258
Sound_Byte.calls = Sound_Byte_x
Sound_Byte_x = f259-f25a
Sound_Byte_x.calls = Sound_Byte_raw
Sound_Byte_raw = f25b-f271

clear_Sound = f272-f27b 
clear_Sound.calls = InitMusic_Buf, Sound_Byte

group(Sound_Bytes) = Sound_Bytes, Sound_Bytes_x
Sound_Bytes = f27d-f281
Sound_Bytes.calls = Sound_Bytes_x
Sound_Bytes_x = f282-f289
Sound_Bytes_x.entry = f284
Sound_Bytes_x.calls = Sound_Byte_x

group(Do_Sound) = Do_Sound, Do_Sound_x
Do_Sound = f289-f28b
Do_Sound.calls = Do_Sound_x
Do_Sound_x = f28c-f29c
Do_Sound_x.calls = Sound_Byte_x

group(Intensity) = Intensity_1F, Intensity_3F, Intensity_5F, Intensity_7F, Intensity_a
Intensity_1F = f29d-f2a0
Intensity_1F.calls = Intensity_a
Intensity_3F = f2a1-f2a4
Intensity_3F.calls = Intensity_a
Intensity_5F = f2a5-f2a8
Intensity_5F.calls = Intensity_a
Intensity_7F = f2a9-f2aa
Intensity_7F.calls = Intensity_a
Intensity_a = f2ab-f2bd

group(Dot) = Dot_d, Dot_here, Dot_ix, Dot_ix_b
Dot_ix_b = f2be-f2c0
Dot_ix_b.calls = Dot_ix
Dot_ix = f2c1-f2c2
Dot_ix.calls = Dot_d
Dot_d = f2c3-f2c4
Dot_d.calls = Dot_here, Moveto_d
Dot_here = f2c5-f2d1

group(Dot_List) = Dot_List, Dot_List_Reset
Dot_List = f2d2-f2dd
Dot_List.entry = f2d5
Dot_List.calls = Dot_ix, Reset0Ref
Dot_List_Reset = f2de-f2e5
Dot_List_Reset.calls = Dot_ix, Reset0Ref

Recalibrate = f2e6-f2f1
Recalibrate.calls = Move_to_ix, Move_to_ix_FF, Reset0Int, Reset0Ref

group(Moveto) = Moveto, Moveto_d, Moveto_d_7F, Moveto_ix, Moveto_ix_b, Moveto_ix_7F, Moveto_ix_FF, Moveto_x_7F
Moveto_x_7F = f2f2-f2fb
Moveto_x_7F.calls = Moveto_d
Moveto_d_7F = f2fc-f307
Moveto_d_7F.calls = Moveto
Moveto_ix_FF = f308-f30b
Moveto_ix_FF.calls = Moveto_ix_b
Moveto_ix_7F = f30c-f30d
Moveto_ix_7F.calls = Moveto_ix_b
Moveto_ix_b = f30e-f30f
Moveto_ix_b.calls = Moveto_ix
Moveto_ix = f310-f311
Moveto_ix.calls = Moveto_d
Moveto_d = f312-f317
Moveto_d.calls = Moveto
Moveto = f318-f349
Moveto.calls = Abs_a_b

group(Reset0Ref) = Check0Ref, Reset0Ref, Reset0Ref_D0, Reset_Pen
Reset0Ref_D0 = f34a-f34e
Reset0Ref_D0.calls = DP_to_D0, Reset0Ref_D0
Check0Ref = f34f-f353
Check0Ref.calls = Reset0Ref
Reset0Ref = f354-f35a
Reset0Ref.calls = Reset_Pen
Reset_Pen = f35b-f36a

Reset0Int = f36b-f372

group(Print_Str) = Print_Str_d, Print_Str_yx, Print_Str_hwyx
Print_Str_hwyx = f373-f377
Print_Str_hwyx.calls = Print_Str_yx
Print_Str_yx = f378-f379
Print_Str_yx.calls = Print_Str_d
Print_Str_d = f37a-f382
Print_Str_d.calls = Delay_1, Moveto_d_7F, Print_Str

group(Print_List) = Print_List, Print_List_Chk, Print_List_hw
Print_List_hw = f383-f389
Print_List_hw.entry = f385
Print_List_hw.calls = Print_Str_hwyx
Print_List = f38A-f38B
Print_List.calls = Print_List_Chk, Print_Str_yx
Print_List_Chk = f38C-f390
Print_List.calls = Print_List

group(Print_Ships) = Print_Ships, Print_Ships_x
Print_Ships_x = f391-f392
Print_Ships_x.calls = Print_Ships
Print_Ships = f393-f3ac
Print_Ships.calls = Print_Str_yx
